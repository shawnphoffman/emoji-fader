{"version":3,"sources":["EmojiFader.js","App.js","index.js"],"names":["nextIndex","i","listLength","EmojiFader","emojis","interval","React","useState","index","setIndex","useEffect","timer","setTimeout","length","clearTimeout","className","style","animationDuration","key","mages","wizards","apples","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAIMA,G,MAAY,SAACC,EAAGC,GAAJ,OAAoBD,EAAI,IAAMC,EAAa,EAAID,EAAI,IAkCtDE,EAhCI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAA8B,IAAtBC,gBAAsB,MAAX,IAAW,IAEzBC,IAAMC,SAAS,GAFU,mBAE5CC,EAF4C,KAErCC,EAFqC,KAcnD,OATAH,IAAMI,WAAU,WACf,IAAMC,EAAQC,YAAW,WACxBH,EAAST,EAAUQ,EAAOJ,EAAOS,WAC/BR,GACH,OAAO,WACNS,aAAaH,MAEZ,CAACP,EAAOS,OAAQL,EAAOH,IAErBD,EAGJ,0BAAMW,UAAU,gBACf,0BAAMA,UAAU,QAAQX,EAAOJ,EAAUQ,EAAOJ,EAAOS,UAEvD,0BAAME,UAAU,gBAAgBC,MAAO,CAAEC,kBAAkB,GAAD,OAAKZ,EAAL,OAAqBa,IAAKV,GAClFJ,EAAOI,KAPS,MChBfW,G,MAAQ,CAAC,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,+CAC9DC,EAAU,CAAC,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,8CAChEC,EAAS,CAAC,qBAAO,sBAoCRC,MAlCf,WACC,OACC,6BACC,2CACA,sGAEA,2CACA,yBAAKP,UAAU,oBACd,kBAAC,EAAD,CAAYX,OAAQgB,IACpB,kBAAC,EAAD,CAAYhB,OAAQe,IACpB,kBAAC,EAAD,CAAYf,OAAQiB,KAGrB,wCACA,yBAAKN,UAAU,oBACd,kBAAC,EAAD,CAAYX,OAAQiB,EAAQhB,SAAU,OAGvC,8CACA,wCACA,yBAAKU,UAAU,6BACd,kBAAC,EAAD,CAAYX,OAAQgB,IACpB,kBAAC,EAAD,CAAYhB,OAAQe,KAGrB,kDACA,yBAAKJ,UAAU,gCACd,kBAAC,EAAD,CAAYX,OAAQgB,IACpB,yBAAKL,UAAU,cAAf,uBC/BJQ,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.8d4858c6.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './EmojiFader.css'\n\nconst nextIndex = (i, listLength) => (i + 1 === listLength ? 0 : i + 1)\n\nconst EmojiFader = ({ emojis, interval = 1000 }) => {\n\t// Tracks the visible index\n\tconst [index, setIndex] = React.useState(0)\n\n\t// Timer\n\tReact.useEffect(() => {\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetIndex(nextIndex(index, emojis.length))\n\t\t}, interval)\n\t\treturn () => {\n\t\t\tclearTimeout(timer)\n\t\t}\n\t}, [emojis.length, index, interval])\n\n\tif (!emojis) return null\n\n\treturn (\n\t\t<span className=\"icon-wrapper\">\n\t\t\t<span className=\"icon\">{emojis[nextIndex(index, emojis.length)]}</span>\n\t\t\t{/* Current index below next so that it fades into it */}\n\t\t\t<span className=\"icon fade-out\" style={{ animationDuration: `${interval}ms` }} key={index}>\n\t\t\t\t{emojis[index]}\n\t\t\t</span>\n\t\t</span>\n\t)\n}\n\nEmojiFader.propTypes = {\n\temojis: PropTypes.array,\n\tinterval: PropTypes.number,\n}\n\nexport default EmojiFader\n","import React from 'react'\nimport EmojiFader from './EmojiFader'\nimport './App.css'\n\nconst mages = ['🧙‍♀️', '🧙🏻‍♀️', '🧙🏼‍♀️', '🧙🏽‍♀️', '🧙🏾‍♀️', '🧙🏿‍♀️']\nconst wizards = ['🧙‍♂️', '🧙🏻‍♂️', '🧙🏼‍♂️', '🧙🏽‍♂️', '🧙🏾‍♂️', '🧙🏿‍♂️']\nconst apples = ['🍎️', '🍏️']\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<h1>emoji-fader</h1>\n\t\t\t<div>This is not an efficient method for doing this. This was only a test.</div>\n\n\t\t\t<h2>Basic Usage</h2>\n\t\t\t<div className=\"font-size-parent\">\n\t\t\t\t<EmojiFader emojis={wizards} />\n\t\t\t\t<EmojiFader emojis={mages} />\n\t\t\t\t<EmojiFader emojis={apples} />\n\t\t\t</div>\n\n\t\t\t<h2>Interval</h2>\n\t\t\t<div className=\"font-size-parent\">\n\t\t\t\t<EmojiFader emojis={apples} interval={500} />\n\t\t\t</div>\n\n\t\t\t<h2>Alignment Test</h2>\n\t\t\t<h3>Flex Row</h3>\n\t\t\t<div className=\"flex-row font-size-parent\">\n\t\t\t\t<EmojiFader emojis={wizards} />\n\t\t\t\t<EmojiFader emojis={mages} />\n\t\t\t</div>\n\n\t\t\t<h3>Centered Over Text</h3>\n\t\t\t<div className=\"flex-column font-size-parent\">\n\t\t\t\t<EmojiFader emojis={wizards} />\n\t\t\t\t<div className=\"dummy-text\">Congratulations!</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}